// Generated by gencpp from file robo_waiter/Obstacle.msg
// DO NOT EDIT!


#ifndef ROBO_WAITER_MESSAGE_OBSTACLE_H
#define ROBO_WAITER_MESSAGE_OBSTACLE_H

#include <ros/service_traits.h>


#include <robo_waiter/ObstacleRequest.h>
#include <robo_waiter/ObstacleResponse.h>


namespace robo_waiter
{

struct Obstacle
{

typedef ObstacleRequest Request;
typedef ObstacleResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Obstacle
} // namespace robo_waiter


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::robo_waiter::Obstacle > {
  static const char* value()
  {
    return "4a4b2bdf33b9dce4f3e033bed4cd41b8";
  }

  static const char* value(const ::robo_waiter::Obstacle&) { return value(); }
};

template<>
struct DataType< ::robo_waiter::Obstacle > {
  static const char* value()
  {
    return "robo_waiter/Obstacle";
  }

  static const char* value(const ::robo_waiter::Obstacle&) { return value(); }
};


// service_traits::MD5Sum< ::robo_waiter::ObstacleRequest> should match 
// service_traits::MD5Sum< ::robo_waiter::Obstacle > 
template<>
struct MD5Sum< ::robo_waiter::ObstacleRequest>
{
  static const char* value()
  {
    return MD5Sum< ::robo_waiter::Obstacle >::value();
  }
  static const char* value(const ::robo_waiter::ObstacleRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::robo_waiter::ObstacleRequest> should match 
// service_traits::DataType< ::robo_waiter::Obstacle > 
template<>
struct DataType< ::robo_waiter::ObstacleRequest>
{
  static const char* value()
  {
    return DataType< ::robo_waiter::Obstacle >::value();
  }
  static const char* value(const ::robo_waiter::ObstacleRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::robo_waiter::ObstacleResponse> should match 
// service_traits::MD5Sum< ::robo_waiter::Obstacle > 
template<>
struct MD5Sum< ::robo_waiter::ObstacleResponse>
{
  static const char* value()
  {
    return MD5Sum< ::robo_waiter::Obstacle >::value();
  }
  static const char* value(const ::robo_waiter::ObstacleResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::robo_waiter::ObstacleResponse> should match 
// service_traits::DataType< ::robo_waiter::Obstacle > 
template<>
struct DataType< ::robo_waiter::ObstacleResponse>
{
  static const char* value()
  {
    return DataType< ::robo_waiter::Obstacle >::value();
  }
  static const char* value(const ::robo_waiter::ObstacleResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBO_WAITER_MESSAGE_OBSTACLE_H
