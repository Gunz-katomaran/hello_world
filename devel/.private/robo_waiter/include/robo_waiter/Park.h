// Generated by gencpp from file robo_waiter/Park.msg
// DO NOT EDIT!


#ifndef ROBO_WAITER_MESSAGE_PARK_H
#define ROBO_WAITER_MESSAGE_PARK_H

#include <ros/service_traits.h>


#include <robo_waiter/ParkRequest.h>
#include <robo_waiter/ParkResponse.h>


namespace robo_waiter
{

struct Park
{

typedef ParkRequest Request;
typedef ParkResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Park
} // namespace robo_waiter


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::robo_waiter::Park > {
  static const char* value()
  {
    return "4a4b2bdf33b9dce4f3e033bed4cd41b8";
  }

  static const char* value(const ::robo_waiter::Park&) { return value(); }
};

template<>
struct DataType< ::robo_waiter::Park > {
  static const char* value()
  {
    return "robo_waiter/Park";
  }

  static const char* value(const ::robo_waiter::Park&) { return value(); }
};


// service_traits::MD5Sum< ::robo_waiter::ParkRequest> should match 
// service_traits::MD5Sum< ::robo_waiter::Park > 
template<>
struct MD5Sum< ::robo_waiter::ParkRequest>
{
  static const char* value()
  {
    return MD5Sum< ::robo_waiter::Park >::value();
  }
  static const char* value(const ::robo_waiter::ParkRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::robo_waiter::ParkRequest> should match 
// service_traits::DataType< ::robo_waiter::Park > 
template<>
struct DataType< ::robo_waiter::ParkRequest>
{
  static const char* value()
  {
    return DataType< ::robo_waiter::Park >::value();
  }
  static const char* value(const ::robo_waiter::ParkRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::robo_waiter::ParkResponse> should match 
// service_traits::MD5Sum< ::robo_waiter::Park > 
template<>
struct MD5Sum< ::robo_waiter::ParkResponse>
{
  static const char* value()
  {
    return MD5Sum< ::robo_waiter::Park >::value();
  }
  static const char* value(const ::robo_waiter::ParkResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::robo_waiter::ParkResponse> should match 
// service_traits::DataType< ::robo_waiter::Park > 
template<>
struct DataType< ::robo_waiter::ParkResponse>
{
  static const char* value()
  {
    return DataType< ::robo_waiter::Park >::value();
  }
  static const char* value(const ::robo_waiter::ParkResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // ROBO_WAITER_MESSAGE_PARK_H
