// Generated by gencpp from file path_follower/Nearest.msg
// DO NOT EDIT!


#ifndef PATH_FOLLOWER_MESSAGE_NEAREST_H
#define PATH_FOLLOWER_MESSAGE_NEAREST_H

#include <ros/service_traits.h>


#include <path_follower/NearestRequest.h>
#include <path_follower/NearestResponse.h>


namespace path_follower
{

struct Nearest
{

typedef NearestRequest Request;
typedef NearestResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Nearest
} // namespace path_follower


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::path_follower::Nearest > {
  static const char* value()
  {
    return "971c336fc98e1a1ea33980f32a28c2d9";
  }

  static const char* value(const ::path_follower::Nearest&) { return value(); }
};

template<>
struct DataType< ::path_follower::Nearest > {
  static const char* value()
  {
    return "path_follower/Nearest";
  }

  static const char* value(const ::path_follower::Nearest&) { return value(); }
};


// service_traits::MD5Sum< ::path_follower::NearestRequest> should match 
// service_traits::MD5Sum< ::path_follower::Nearest > 
template<>
struct MD5Sum< ::path_follower::NearestRequest>
{
  static const char* value()
  {
    return MD5Sum< ::path_follower::Nearest >::value();
  }
  static const char* value(const ::path_follower::NearestRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::path_follower::NearestRequest> should match 
// service_traits::DataType< ::path_follower::Nearest > 
template<>
struct DataType< ::path_follower::NearestRequest>
{
  static const char* value()
  {
    return DataType< ::path_follower::Nearest >::value();
  }
  static const char* value(const ::path_follower::NearestRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::path_follower::NearestResponse> should match 
// service_traits::MD5Sum< ::path_follower::Nearest > 
template<>
struct MD5Sum< ::path_follower::NearestResponse>
{
  static const char* value()
  {
    return MD5Sum< ::path_follower::Nearest >::value();
  }
  static const char* value(const ::path_follower::NearestResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::path_follower::NearestResponse> should match 
// service_traits::DataType< ::path_follower::Nearest > 
template<>
struct DataType< ::path_follower::NearestResponse>
{
  static const char* value()
  {
    return DataType< ::path_follower::Nearest >::value();
  }
  static const char* value(const ::path_follower::NearestResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PATH_FOLLOWER_MESSAGE_NEAREST_H
